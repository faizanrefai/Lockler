//
//  MineFunnVC.m
//  EstateLokaler
//
//  Created by apple on 9/7/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "MineFunnVC.h"
#import "MineFunnCell.h"
#import "UITableViewCell+NIB.h"
#import "EstateLokalerAppDelegate.h"
#import "GdataParser.h"
#import "MineSokCell.h"
#import "UITableViewCell+NIB.h"
#import "EGOImageView.h"
#import "PropertiesDetailVC.h"
#import "REVClusterMapView.h"
#import "REVClusterPin.h"
#import "REVClusterAnnotationView.h"

@implementation MineFunnVC

// The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
/*
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization.
    }
    return self;
}
*/


// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
    [super viewDidLoad];
	//btnBack.hidden=FALSE;
	arrDelID=[[NSMutableArray alloc]init];
	strTempDelID=[[NSString alloc]init];
	arrLat=[[NSMutableArray alloc]init];
	arrLong=[[NSMutableArray alloc]init];
	dist=[[NSMutableArray alloc]init];
	arrSok=[[NSMutableArray alloc]init];
	_dict=[[NSMutableDictionary alloc]init];
	appdel=(EstateLokalerAppDelegate *)[[UIApplication sharedApplication]delegate];
	//NSLog(@"udid is %@",appdel.udID);
	mapView.hidden=YES;
	listView.hidden=NO;
}

- (void)viewWillAppear:(BOOL)animated{
//	if(mapView.hidden=FALSE)
//	btnBack.hidden=TRUE;
	//
	//img.image=[UIImage imageNamed:@"topBarlist.png"];
	if(appdel.signSok==9){
		[btnBack setImage:[UIImage imageNamed:@"BackPDetail.png"] forState:UIControlStateNormal];
		btnDelete.hidden=TRUE;
		[self GDATASokDetail];
	}
	else{
		[btnBack setImage:[UIImage imageNamed:@"HomePLM.png"] forState:UIControlStateNormal];

	[self GDATA];
	}
}

/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

-(void)GDATA{	
	
	GdataParser *parser = [[GdataParser alloc] init];
	[parser downloadAndParse:[NSURL URLWithString:[NSString stringWithFormat:@"http://www.estatelokaler.no/appservice.php?token=getads&udid=%@",appdel.udID]]
				 withRootTag:@"post" 
					withTags:[NSDictionary dictionaryWithObjectsAndKeys:@"id",@"id",@"title",@"title",@"adress",@"adress",@"houseno",@"houseno",@"latitude",@"latitude",@"longitude",@"longitude",@"shortDescription",@"shortDescription",@"mainimage",@"mainimage",@"areaname",@"areaname",@"townname",@"townname",@"fromarea",@"fromarea",@"toarea",@"toarea",@"departmentname",@"departmentname",nil]
						 sel:@selector(finishGetData:) 
				  andHandler:self];
	

}

-(void)finishGetData:(NSDictionary*)dictionary{
	//NSLog(@"This is dictionary: %@",dictionary);
	[appdel.arrList removeAllObjects];
	//[arrLat removeAllObjects];
	//[arrLong removeAllObjects];
	appdel.arrList =[dictionary valueForKey:@"array"];
	_dict =[dictionary valueForKey:@"array"];
	arrDelID=[[_dict valueForKey:@"id"]retain];
	arrLat=[[_dict valueForKey:@"latitude"]retain];
	arrLong=[[_dict valueForKey:@"longitude"]retain];
	for(int i=0;i<[arrLat count];i++)
	{
		
		NSString *strlat;
		NSString *strlong;
		strlat=[arrLat objectAtIndex:i];
		strlong=[arrLong objectAtIndex:i];
		CLLocation *poiLoc = [[CLLocation alloc] initWithLatitude: [strlat doubleValue] longitude: [strlong doubleValue]];
		
		NSLog(@"%f  %f",appdel.lat,appdel.lon);
		CLLocation *userLoc = [[CLLocation alloc] initWithLatitude:appdel.lat longitude:appdel.lon];
		
		double dist1 = [userLoc getDistanceFrom:poiLoc];
		NSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];
		[formatter setNumberStyle:NSNumberFormatterDecimalStyle];
		[formatter setMaximumFractionDigits:2];
		[formatter setRoundingMode: NSNumberFormatterRoundHalfUp];
		
		NSString *numberString = [formatter stringFromNumber:[NSNumber numberWithFloat:dist1]];
		
		[formatter release];
		NSLog(@"%@",numberString);
		
		if(dist1<999)
			[dist addObject:[NSString stringWithFormat:@"%@ meter",numberString]];
		else{
			
			float temp;
			temp=dist1/1000;
			[dist addObject:[NSString stringWithFormat:@"%@ KM",numberString]];
			
			appdel.currentArray=appdel.arrList;
		}
	}
	
	[tableView reloadData];
	
}
-(void)GDATADelete{	
	//NSLog(@"delete id is%@",appdel.appdelStrID);
	GdataParser *parser1 = [[GdataParser alloc] init];
	[parser1 downloadAndParse:[NSURL  URLWithString:[NSString stringWithFormat:@"http://www.estatelokaler.no/appservice.php?token=deletemyads&udid=%@&propids=%@",appdel.udID,strTempDelID]]

					 withRootTag:@"deletemyads" 
					withTags:[NSDictionary dictionaryWithObjectsAndKeys:nil]
						 sel:@selector(finishGetDataDelete:) 
				  andHandler:self];
	
}

-(void)finishGetDataDelete:(NSDictionary*)dictionary{

}

-(void)GDATASokDetail{	
	
	GdataParser *parserSok = [[GdataParser alloc] init];
	[parserSok downloadAndParse:[NSURL
								 URLWithString:[NSString stringWithFormat:@"http://www.estatelokaler.no/appservice.php?token=getindsearchlist&udid=%@&searchid=%@",appdel.udID,appdel.strAppSearchId]]
					withRootTag:@"post" 
					   withTags:[NSDictionary dictionaryWithObjectsAndKeys:@"id",@"id",@"title",@"title",@"adress",@"adress",@"houseno",@"houseno",@"latitude",@"latitude",@"longitude",@"longitude",@"shortDescription",@"shortDescription",@"mainimage",@"mainimage",@"areaname",@"areaname",@"townname",@"townname",@"fromarea",@"fromarea",@"toarea",@"toarea",@"departmentname",@"departmentname",@"date_insert",@"date_insert",nil]
							sel:@selector(finishGetDataSokDetail:) 
					 andHandler:self];
}

-(void)finishGetDataSokDetail:(NSDictionary*)dictionary{
	//NSLog(@"This is dictionary: %@",dictionary);
	[arrSok	removeAllObjects];
	
	dictSok =[[dictionary valueForKey:@"array"]retain];
	arrSok =[[dictionary valueForKey:@"array"] retain];
	arrLat=[[dictSok valueForKey:@"latitude"]retain];
	arrLong=[[dictSok valueForKey:@"longitude"]retain];
	for(int i=0;i<[arrLat count];i++)
	{
		
		NSString *strlat;
		NSString *strlong;
		strlat=[arrLat objectAtIndex:i];
		strlong=[arrLong objectAtIndex:i];
		CLLocation *poiLoc = [[CLLocation alloc] initWithLatitude: [strlat doubleValue] longitude: [strlong doubleValue]];
		
		CLLocation *userLoc = [[CLLocation alloc] initWithLatitude:appdel.lat longitude:appdel.lon];
		
		double dist1 = [userLoc getDistanceFrom:poiLoc];
		NSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];
		[formatter setNumberStyle:NSNumberFormatterDecimalStyle];
		[formatter setMaximumFractionDigits:2];
		[formatter setRoundingMode: NSNumberFormatterRoundHalfUp];
		
		NSString *numberString = [formatter stringFromNumber:[NSNumber numberWithFloat:dist1]];
		
		[formatter release];
		NSLog(@"%@",numberString);
	
		if(dist1<999)
			[dist addObject:[NSString stringWithFormat:@"%@ meter",numberString]];
		else{
			
			float temp;
			temp=dist1/1000;
			[dist addObject:[NSString stringWithFormat:@"%@ KM",numberString]];
			
		}
		
		appdel.currentArray=arrSok;
		//double dist = 
		//[self getDistance:appdel.lat:appdel.lon:[strlat doubleValue]:[strlong doubleValue]];
		
	}
	[tableView reloadData];
}



#pragma mark -
#pragma mark Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}


// Customize the number of rows in the table view.
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
	 if(appdel.signSok==9)
	{
		return [arrSok count];
	}
    return [appdel.arrList count];
}


// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)atableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
	MineFunnCell *cell = [MineFunnCell dequeOrCreateInTable:tableView];
	EGOImageView *imageViewL = [[EGOImageView alloc] initWithPlaceholderImage:[UIImage imageNamed:@"placeholder.png"]];
	imageViewL.frame = CGRectMake(4.0f, 7.0f, 87.0f, 87.0f);
	[cell.contentView addSubview:imageViewL];
	
	 if(appdel.signSok==9)
	{
		dictSok=[arrSok objectAtIndex:indexPath.row];
		if([dist count]>0)
			cell.lblAvstand.text=[NSString stringWithFormat:@"Avstand:%@",[dist objectAtIndex:indexPath.row]];
		
		[self setLoadImageg:[dictSok valueForKey:@"mainimage"] :imageViewL];
		[cell setData:dictSok];
	}
	
	 else{
	_dict =[appdel.arrList objectAtIndex:indexPath.row];
	//cell.imgView.hidden = TRUE;
	
	[self setLoadImageg:[_dict valueForKey:@"mainimage"]:imageViewL];
	
	if([dist count]>0)
		cell.lblAvstand.text=[NSString stringWithFormat:@"Avstand:%@",[dist objectAtIndex:indexPath.row]];

	
	[cell setData: _dict];
	 }
	cell.backgroundView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"header_w.png"]];
    return cell;
    }

-(void)setLoadImageg:(NSString*)loadimage:(EGOImageView*)img{
	
	img.imageURL = [NSURL URLWithString:loadimage];
}


-(IBAction)funnDelete{
	
	
	if(self.editing)
	{ 
		[super setEditing:NO animated:NO]; 
		[tableView setEditing:NO animated:NO];
		[tableView reloadData];
		[self.navigationItem.leftBarButtonItem setTitle:@"Delete"];
		[self.navigationItem.leftBarButtonItem setStyle:UIBarButtonItemStylePlain];
		self.navigationItem.rightBarButtonItem.enabled=TRUE;
	}
	else
	{
		[super setEditing:YES animated:YES]; 
		
		[tableView setEditing:YES animated:YES];
		[tableView reloadData];
		[self.navigationItem.leftBarButtonItem setTitle:@"Done"];
		[self.navigationItem.leftBarButtonItem setStyle:UIBarButtonItemStyleDone];
		self.navigationItem.rightBarButtonItem.enabled=FALSE;
	}
	
	
}
- (void)tableView:(UITableView *)atableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle 
forRowAtIndexPath:(NSIndexPath *)indexPath {
	
    if (editingStyle == UITableViewCellEditingStyleDelete) {
		//NSLog(@"id is  %@",appdel.appdelStrID);
		NSMutableDictionary *d_t=[appdel.arrList objectAtIndex:indexPath.row];
		strTempDelID=[d_t valueForKey:@"id"];
		//NSLog(@"id issssss  %@",strTempDelID);
		[self GDATADelete];
		[appdel.arrList removeObjectAtIndex:indexPath.row];
		[tableView reloadData];
		[d_t release];
	}
}	
/*
 // Override to support conditional editing of the table view.
 - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
 // Return NO if you do not want the specified item to be editable.
 return YES;
 }
 */


/*
 // Override to support editing the table view.
 - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
 
 if (editingStyle == UITableViewCellEditingStyleDelete) {
 // Delete the row from the data source.
 [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
 }   
 else if (editingStyle == UITableViewCellEditingStyleInsert) {
 // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view.
 }   
 }
 */


/*
 // Override to support rearranging the table view.
 - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
 }
 */


/*
 // Override to support conditional rearranging of the table view.
 - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
 // Return NO if you do not want the item to be re-orderable.
 return YES;
 }
 */


#pragma mark -
#pragma mark Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
   // [tableView deselectRowAtIndexPath:indexPath animated:YES];

	PropertiesDetailVC *detailViewController = [[PropertiesDetailVC alloc] initWithNibName:@"PropertiesDetailVC" bundle:nil];
	if(appdel.signSok==9)
    {	dictSok=[arrSok objectAtIndex:indexPath.row];
        strTmp=[dictSok valueForKey:@"id"];
		appdel.appdelStrID=strTmp;
		
	}
	else{
	_dict =[appdel.arrList objectAtIndex:indexPath.row];
	NSString *strSearchId=[_dict valueForKey:@"id"];
	appdel.appdelStrID=strSearchId;  
	}
	[self.navigationController pushViewController:detailViewController animated:YES];
	[detailViewController release];
}

-(IBAction)clickKart{
	img.image=[UIImage imageNamed:@"topBarKart.png"];
	listView.hidden=YES;
	mapView.hidden=NO;
	mapObj.hidden=NO;
	//btnBack.hidden=TRUE;
	[self getMapannotation:appdel.currentArray];
}

-(IBAction)clickList{
	[_mapView removeFromSuperview];
	_mapView = nil;
	[_mapView  release];
	img.image=[UIImage imageNamed:@"topBarlist.png"];
	//[self getMapannotation:appdel.arrList];
	listView.hidden=NO;
	mapObj.hidden=YES;
	mapView.hidden=YES;
	//btnBack.hidden=FALSE;
	listView.userInteractionEnabled =YES;
}

-(void)getMapannotation: (NSMutableArray *)arr{
	if([arr count]==0)
		return;
	_mapView = [[REVClusterMapView alloc] initWithFrame:CGRectMake(0,0, 320, 480)];
    _mapView.delegate = self;
	[mapObj addSubview:_mapView];
	//[_mapView removeAnnotations:];
	CLLocationCoordinate2D coordinate;
    coordinate.latitude = [[[arr objectAtIndex:0] valueForKey:@"latitude"] floatValue];
    coordinate.longitude = [[[arr  objectAtIndex:0] valueForKey:@"longitude"] floatValue];
	_mapView.region = MKCoordinateRegionMakeWithDistance(coordinate, 500000, 500000);    
    
	NSMutableArray *pinsArray = [NSMutableArray array];
    
    for(int i=0;i<[arr count];i++) {
		
		CGFloat lat = [[[arr objectAtIndex:i] valueForKey:@"latitude"] floatValue];
		CGFloat lng = [[[arr objectAtIndex:i] valueForKey:@"longitude"] floatValue];
		
        CLLocationCoordinate2D newCoord = {lat,lng};
        REVClusterPin *pin = [[REVClusterPin alloc] init];
		pin.title = [NSString stringWithFormat:@"%@",[[arr objectAtIndex:i] valueForKey:@"title"]];
		pin.coordinate = newCoord;
		[pinsArray addObject:pin];
        [pin release]; 
    }
    [self addGestureRecognizersToPiece:_mapView];
    [_mapView addAnnotations:pinsArray];
}

-(MKAnnotationView *)mapView:(MKMapView *)mV viewForAnnotation:
(id <MKAnnotation>)annotation {
	//MKPinAnnotationView *annView = nil; 
	
	if([annotation class] == MKUserLocation.class) {
		//userLocation = annotation;
		return nil;
	}
    
    REVClusterPin *pin = (REVClusterPin *)annotation;
    
    MKAnnotationView *annView;
    
    if( [pin nodeCount] > 0 ){
        annView = (REVClusterAnnotationView*)[mV dequeueReusableAnnotationViewWithIdentifier:@"cluster"];
        
        if( !annView )
            annView = (REVClusterAnnotationView*)[[[REVClusterAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"cluster"] autorelease];
        
        annView.image = [UIImage imageNamed:@"marker_w_number.png"];
        [(REVClusterAnnotationView*)annView setClusterText:[NSString stringWithFormat:@"%i",[pin nodeCount]]];
        annView.canShowCallout = YES;
    } else {
        annView = [mV dequeueReusableAnnotationViewWithIdentifier:@"pin"];
        
        if( !annView )
            annView = [[[MKAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"pin"] autorelease];
	
        annView.image = [UIImage imageNamed:@"marker_property.png"];
        annView.canShowCallout = YES; 
		[annView setEnabled:YES];
		NSString *pintitle=[NSString stringWithFormat:@"%@",((MKPinAnnotationView*) annView).annotation.title];
		//NSLog(@"PinTitle:::%@ \n StrAddress:::%@",pintitle,strAddress);
		for (int i = 0; i<[appdel.currentArray count]; i++)
		{
			d = (NSMutableDictionary*)[appdel.currentArray objectAtIndex:i];
			strAddress = [NSString stringWithFormat:@"%@",[d valueForKey:@"title"]];
			
			if([strAddress isEqualToString:pintitle]) 
			{
				//annot = object;
				d = [appdel.currentArray objectAtIndex:i];
				UIImageView *imageview =[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 45, 30)];
				imgURL= [[NSURL	alloc] initWithString:[d objectForKey:@"mainimage"]]; 
				imageview.image = [UIImage imageWithData:[NSData dataWithContentsOfURL:imgURL]];
				annView.leftCalloutAccessoryView =imageview;				 
				arrDelID = [d objectForKey:@"id"];
			
				//appdel.appdelStrID= arrDelID;
				//NSLog(@"XXXXXXXXX:::%@",appdel.appdelStrID);
				[imageview release];
				break;
			}
		}
		
		UIButton *infoButton = [UIButton buttonWithType:UIButtonTypeCustom];
		infoButton.tag=[[d objectForKey:@"id"] intValue];
		[infoButton setFrame:CGRectMake(annView.bounds.size.width-35,10,25, 27)];
		[infoButton setImage:[UIImage imageNamed:@"DDOrange.png"] forState:UIControlStateNormal];
		annView.rightCalloutAccessoryView = infoButton;
		[infoButton addTarget:self action:@selector(ButtonPressed:)forControlEvents:UIControlEventTouchUpInside];
		
    }
    return annView;
	
}

- (void)addGestureRecognizersToPiece:(UIView *)piece
{
	
    
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(handleDoubleTap:)];
    [piece addGestureRecognizer:tapGesture];
    [tapGesture release];
    
    
}


- (CLLocationCoordinate2D)convertPoint:(CGPoint)point toCoordinateFromView:(UIView *)view
{
    CLLocationCoordinate2D location;
    
    location.latitude = point.x;
    location.longitude = point.y;
	
    return location;
}

- (void)handleDoubleTap:(UIGestureRecognizer *)gestureRecognizer
{
	CGPoint a  = [gestureRecognizer locationInView:_mapView];
	
    MKCoordinateRegion region;
    MKCoordinateSpan span;
    region.center = [_mapView convertPoint:a toCoordinateFromView:_mapView];
    span.latitudeDelta=_mapView.region.span.latitudeDelta/6;
    span.longitudeDelta=_mapView.region.span.longitudeDelta/6;
    region.span=span;
    
    [_mapView setRegion:region animated:TRUE];
}

-(void)ButtonPressed:(id)sender{
	
	//sender.annView.hidden =YES;
	PropertiesDetailVC *detailViewController = [[PropertiesDetailVC alloc] initWithNibName:@"PropertiesDetailVC" bundle:nil];
	//_dict =[appdel.arrList objectAtIndex:indexPath.row];
	NSString *strSearchId=[NSString stringWithFormat:@"%d",[sender tag]];   //[_dict valueForKey:@"id"];
	appdel.appdelStrID=strSearchId;  
	//NSLog(@"%@",appdel.appdelStrID);
	[self.navigationController pushViewController:detailViewController animated:YES];
    [detailViewController release];	
	
}

#pragma mark -
#pragma mark custom methods
-(void)clickBack
{
	appdel.sokCnt=1;

	[self.navigationController popViewControllerAnimated:YES];
}
- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (void)dealloc {
    [super dealloc];
	[_dict release];
	[arrDelID release];
	[strTempDelID  release];
	[tableView release];
	
	[dist release];
	[img release];
	[mapView release];
	[listView release];
	[mapObj release];
	if (arrSok !=nil) {
		arrSok=nil;
		[arrSok release];
	}
	if (arrLat !=nil) {
		arrLat=nil;
		[arrLat release];
	}
	if (arrLong !=nil) {
		arrLong=nil;
		[arrLong release];
	}
	
}


@end
